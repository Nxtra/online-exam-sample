CREATE TABLE IF NOT EXISTS EXAM (
  ID          INT          NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME        VARCHAR(50)  NOT NULL,
  DESCRIPTION VARCHAR(250) NOT NULL
);

CREATE TABLE IF NOT EXISTS QUESTION (
  ID           INT          NOT NULL AUTO_INCREMENT PRIMARY KEY,
  EXAM_ID      INT          NOT NULL,
  NAME         VARCHAR(250) NOT NULL,
  MULTI_ANSWER BIT          NOT NULL DEFAULT 0,
  CONSTRAINT FK_ExamQuestion FOREIGN KEY (EXAM_ID) REFERENCES EXAM (ID)
);

CREATE TABLE IF NOT EXISTS ANSWER (
  ID          INT          NOT NULL AUTO_INCREMENT PRIMARY KEY,
  QUESTION_ID INT          NOT NULL,
  NAME        VARCHAR(250) NOT NULL,
  IS_CORRECT  BIT          NOT NULL DEFAULT 0,
  CONSTRAINT FK_ExamAnswer FOREIGN KEY (QUESTION_ID) REFERENCES QUESTION (ID)
);

CREATE TABLE IF NOT EXISTS USERS (
  ID       INT         NOT NULL AUTO_INCREMENT PRIMARY KEY,
  USERNAME VARCHAR(50) NOT NULL,
  PASSWORD VARCHAR(50) NOT NULL,
  ENABLED  BIT         NOT NULL DEFAULT 1
);

CREATE TABLE IF NOT EXISTS AUTHORITIES (
  ID        INT         NOT NULL AUTO_INCREMENT PRIMARY KEY,
  USERNAME  VARCHAR(50) NOT NULL,
  AUTHORITY VARCHAR(50) NOT NULL,
  USER_ID   INT         NOT NULL DEFAULT  1,
  CONSTRAINT FK_UserAuthorities FOREIGN KEY (USER_ID) REFERENCES USERS (ID)
);

CREATE TABLE IF NOT EXISTS PROTOCOL (
  ID              INT      NOT NULL AUTO_INCREMENT PRIMARY KEY,
  EXAM_ID         INT      NOT NULL,
  USER_ID         INT      NOT NULL,
  START           DATETIME NOT NULL,
  FINISH          DATETIME,
  QUESTION_COUNT  INT,
  CORRECT_ANSWERS INT,
  GRADE           INT,
  CONSTRAINT FK_ExamProtocol FOREIGN KEY (EXAM_ID) REFERENCES EXAM (ID),
  CONSTRAINT FK_UserProtocol FOREIGN KEY (USER_ID) REFERENCES USERS (ID)
);
